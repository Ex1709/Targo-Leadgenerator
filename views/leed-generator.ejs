<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Targo Dashboard - Leed Generator</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <link href='https://unpkg.com/boxicons/css/boxicons.min.css' rel='stylesheet'>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;700&display=swap');

        body {
            font-family: 'Inter', sans-serif;
            background-color: #121212;
            color: #e0e0e0;
            scrollbar-color: #000000 #000000; /* Thumb color and track color */
    scrollbar-width: thin; /* Thin scrollbar */

        }

        /* Full Black Scrollbar for Webkit Browsers (Chrome, Edge, Safari) */
::-webkit-scrollbar {
    width: 10px; /* Width of the scrollbar */
    height: 10px; /* Height of the scrollbar (for horizontal scrollbars) */
}

::-webkit-scrollbar-thumb {
    background-color: #000000; /* Full black thumb */
    border-radius: 10px; /* Rounded edges for the scrollbar thumb */
}

::-webkit-scrollbar-track {
    background-color: #000000; /* Full black track */
}

/* Full Black Scrollbar for Firefox */
* {
    scrollbar-width: thin; /* Makes the scrollbar thinner */
    scrollbar-color: #000000 #000000; /* Thumb color and track color */
}

#right-sidebar {
    transition: transform 0.3s ease-in-out;
}

#right-sidebar.hidden {
    transform: translateX(100%); /* Moves sidebar off-screen */
}


@keyframes slideIn {
    from {
        opacity: 0;
        transform: translateX(20px);
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
}

#contact-list li {
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    padding: 8px 0;
}


/* Optional: Styling for Scrollbar in Edge */


        .sidebar {
            background-color: #1e1e1e;
            width: 70px;
            height: 100vh;
            position: fixed;
            left: 0;
            transition: width 0.3s ease;
            overflow: hidden;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .sidebar:hover {
            width: 250px;
        }

        .sidebar .logo {
            text-align: center;
            padding: 20px 0;
        }

        .sidebar .logo img {
            width: 70px;
            height: 70px;
            margin: 0 auto;
            display: block;
        }

        .sidebar nav {
            margin-top: 20px;
            width: 100%;
        }

        .sidebar nav a {
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 15px 0;
            color: #e0e0e0;
            text-decoration: none;
            font-size: 16px;
            font-weight: 500;
            transition: background-color 0.3s ease, box-shadow 0.3s ease;
            width: 100%;
        }

        .sidebar nav a:hover {
            background-color: rgba(255, 255, 255, 0.1);
            box-shadow: inset 0 0 10px rgba(255, 255, 255, 0.2);
        }

        .sidebar:hover nav a {
            justify-content: flex-start;
            padding-left: 20px;
        }

        .sidebar nav a i {
            font-size: 24px;
            margin: 0;
            transition: margin 0.3s ease;
        }

        .sidebar:hover nav a i {
            margin-right: 10px;
        }

        .sidebar nav a span {
            display: none;
        }

        .sidebar:hover nav a span {
            display: inline;
        }

        .main-content {
            margin-left: 70px;
            transition: margin-left 0.3s ease;
        }

        .sidebar:hover ~ .main-content {
            margin-left: 250px;
        }

        .card {
            background-color: #1e1e1e;
            border: 1px solid rgba(255, 255, 255, 0.1);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 20px rgba(255, 255, 255, 0.3);
        }

        .card h3 {
            font-weight: 700;
        }

        .card p {
            font-weight: 500;
        }

        .filter-bar button {
            background-color: #3b82f6;
            color: white;
            transition: background-color 0.3s ease, box-shadow 0.3s ease;
        }

        .filter-bar button:hover {
            background-color: #2563eb;
            box-shadow: 0 4px 10px rgba(255, 255, 255, 0.2);
        }

        .company-box {
            border: 1px solid rgba(255, 255, 255, 0.1);
            background-color: #1e1e1e;
            border-radius: 8px;
            padding: 16px;
            transition: transform 0.3s, box-shadow 0.3s;
        }

        .company-box:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 20px rgba(255, 255, 255, 0.3);
        }

        .pagination-buttons {
            display: flex;
            justify-content: center;
            gap: 10px;
            margin-top: 20px;
            visibility: hidden;
        }

        .pagination-buttons button {
            padding: 8px 16px;
            background-color: #3b82f6;
            color: white;
            border-radius: 8px;
            border: none;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        .pagination-buttons button:hover {
            background-color: #2563eb;
        }

        .pagination-buttons button:disabled {
            background-color: #1e1e1e;
            color: #555;
            cursor: not-allowed;
        }

        .page-indicator {
            text-align: center;
            margin-top: 10px;
            font-size: 16px;
            color: #9ca3af;
        }

        .chart-container {
            position: relative;
            height: 200px;
        }

        canvas {
            display: block;
            width: 100%;
            height: 100%;
        }

        /* General Styles */
body {
    font-family: 'Inter', sans-serif;
    background-color: #121212; /* Dark background */
    color: #e0e0e0; /* Subtle text */
}

/* Input and Dropdown */
#branchekode-search {
    transition: all 0.2s ease-in-out;
}

#branchekode-search:focus {
    background-color: #1f2937; /* Slightly lighter black */
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3); /* Shadow on focus */
}

#branchekode-options li {
    transition: all 0.2s ease-in-out;
    padding: 10px;
    cursor: pointer;
    border-bottom: 1px solid #444;
}

#branchekode-options li:hover {
    background-color: #4f46e5; /* Indigo hover */
    color: white;
}

/* Checkbox */
input[type="checkbox"]:focus {
    outline: none;
    box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.5); /* Indigo focus ring */
}

/* Headings */
h3 {
    font-size: 16px;
}

/* Button */
#search-button {
    transition: all 0.3s ease;
}

#search-button:hover {
    background-color: #4338ca; /* Slightly lighter indigo */
    transform: translateY(-2px); /* Hover lift effect */
}


/* Dropdown tab container beside the canvas */
.dropdown-tab {
    display: inline-block;
    margin-left: 20px; /* Add space between the canvas and dropdown */
    vertical-align: top;
    background-color: #1c1e26; /* Darker background for dropdown */
    border: 1px solid #444; /* Subtle border for contrast */
    border-radius: 8px; /* Rounded edges for better appearance */
    overflow: hidden;
    width: 220px; /* Wider to fit content */
    color: #d1d1d1; /* Dimmed text color */
}

/* Dropdown toggle button */
.dropdown-toggle {
    width: 100%;
    padding: 12px 16px; /* Add more padding for comfortable click area */
    background-color: #2c3e50; /* Neutral color for the header */
    color: white;
    border: none;
    cursor: pointer;
    text-align: left;
    font-size: 16px;
    outline: none;
    transition: background-color 0.3s ease;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.dropdown-toggle:hover {
    background-color: #34495e; /* Slightly lighter on hover */
}

/* Dropdown content with better spacing and alignment */
.dropdown-content {
    max-height: 0;
    overflow: hidden;
    background-color: #23242b; /* Darker dropdown body for contrast */
    transition: max-height 0.4s ease-out;
    padding: 0 16px; /* Add horizontal padding for content */
}

.dropdown-content p {
    margin: 12px 0; /* Add vertical space between items */
    font-size: 14px; /* Slightly smaller font size for clean layout */
    color: #d1d1d1; /* Dimmed content text color */
    line-height: 1.6; /* Improve readability with line height */
}

.dropdown-content span {
    color: #ffffff; /* Highlighted fetched content in white */
    font-weight: bold; /* Make it stand out */
}

/* Add spacing between the dropdown header and dropdown content */
.dropdown-content p:first-of-type {
    margin-top: 16px; /* Space at the top of content */
}

/* Optional: Add shadow for a slight pop effect */
.dropdown-tab {
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
}

/* Company Box */
.company-box {
    position: relative;
    padding: 16px;
    background: #2b2b2b;
    border-radius: 8px;
    border: 1px solid #444;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
}

/* Warning Icon */
.warning-icon {
    display: flex;
    align-items: center;
    justify-content: center;
    background: linear-gradient(135deg, #ff4d4f, #ff7875);
    border-radius: 50%;
    width: 36px;
    height: 36px;
    position: absolute;
    top: 10px; /* Top-right corner of the company box */
    right: 10px; /* Top-right corner of the company box */
    box-shadow: 0 0 15px rgba(255, 77, 79, 0.8);
    transition: transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
    z-index: 10; /* Ensure it appears above all content */
}

.warning-icon:hover {
    transform: scale(1.2);
    box-shadow: 0 0 25px rgba(255, 77, 79, 1);
}

/* SVG Icon */
.warning-icon svg {
    width: 22px;
    height: 22px;
    color: white;
}

/* Tooltip Styles */
.custom-tooltip {
    display: none; /* Hidden by default */
    position: absolute;
    top: -40px; /* Tooltip above the warning icon */
    right: 0; /* Aligned with the icon */
    background: rgba(0, 0, 0, 0.9); /* Semi-transparent dark background */
    color: white;
    padding: 8px 12px;
    border-radius: 6px;
    font-size: 0.875rem;
    font-family: 'Inter', sans-serif;
    text-align: center;
    white-space: nowrap;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3); /* Subtle shadow */
    opacity: 0;
    z-index: 15;
    transition: opacity 0.2s ease, transform 0.2s ease;
}

/* Show Tooltip on Hover */
.warning-icon:hover .custom-tooltip {
    display: block;
    opacity: 1;
    transform: translateY(-10px);
}
/* Popup styles */



/* Blurred background effect */
.backdrop-blur-md {
    backdrop-filter: blur(8px);
}

/* Popup content */
#company-popup .bg-black {
    animation: popupFadeIn 0.4s ease-in-out;
}

/* Close button hover */
#close-popup:hover {
    transform: scale(1.2);
    transition: transform 0.2s;
}

/* Smooth button hover */
#popup-actions button {
    transition: background-color 0.3s ease, transform 0.2s ease;
}

#popup-actions button:hover {
    transform: translateY(-2px);
}

/* Fade-in animation for popup */
@keyframes popupFadeIn {
    from {
        opacity: 0;
        transform: scale(0.95);
    }
    to {
        opacity: 1;
        transform: scale(1);
    }
}




/* List styling for details */
#popup-company-info ul {
    padding-left: 1rem; /* Adjust spacing for bullets */
    line-height: 1.6; /* Better readability */
    font-family: 'Inter', sans-serif; /* Modern font */
}

#popup-company-info ul li {
    font-size: 1rem; /* Standardize font size */
    color: #e0e0e0; /* Subtle white for main text */
}

#popup-company-info ul li span {
    font-weight: bold; /* Highlight labels like Address, Phone, Email */
}

/* Notification styles */
/* Notification container */
#notification-container {
    position: fixed;
    bottom: 20px;
    left: 50%;
    transform: translateX(-50%);
    z-index: 9999; /* Ensure it appears above the blurred popup */
    display: flex;
    flex-direction: column;
    gap: 10px;
    align-items: center;
    pointer-events: none; /* Allow clicks through the notifications */
}

/* Notification styles */
.notification {
    display: flex;
    align-items: center;
    gap: 12px;
    background-color: #1e293b;
    color: white;
    padding: 10px 16px;
    border-radius: 8px;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
    animation: fadeIn 0.5s ease, fadeOut 0.5s ease 4.5s;
    font-family: 'Inter', sans-serif;
    pointer-events: auto; /* Enable interactions for close button */
    max-width: 90%; /* Limit width for smaller screens */
}

/* Notification image */
.notification img {
    width: 32px;
    height: 32px;
    border-radius: 50%;
}

/* Close button */
.notification .close-btn {
    margin-left: auto;
    cursor: pointer;
    color: #e0e0e0;
    font-size: 1.2rem;
    transition: color 0.3s ease;
}

.notification .close-btn:hover {
    color: #ff4d4f;
}

/* Fade-in and fade-out animations */
@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translateY(10px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes fadeOut {
    from {
        opacity: 1;
    }
    to {
        opacity: 0;
    }
}


/* Fold tab container styles */

    </style>
</head>
<body class="text-white">
    <div class="flex">
        <!-- Sidebar -->
        <div class="sidebar">
            <div class="logo">
                <img src="logo.png" alt="Targo Logo">
            </div>
            <nav>
                <a href="/dashboard">
                    <i class='bx bx-home'></i>
                    <span>Dashboard</span>
                </a>
                <a href="/leed-generator">
                    <i class='bx bx-compass'></i>
                    <span>Lead Generator</span>
                </a>
                <a href="/mail-list">
                    <i class='bx bx-envelope'></i>
                    <span>Mail List</span>
                </a>
                <a href="/phone-list">
                    <i class='bx bx-phone-call'></i>
                    <span>Phone List</span>
                </a>
                <a href="#">
                    <i class='bx bxl-mailchimp' ></i>                    
                    <span>MailChimp</span>
                </a>
                <a href="#">
                    <i class='bx bxs-cog' ></i>
                    <span>Settings</span>
                </a>
            </nav>
        </div>


        <div id="notification-container" class="fixed bottom-4 right-4 space-y-4"></div>


<!-- Popup with enhanced design -->
<div id="company-popup" class="hidden fixed inset-0 flex items-center justify-center z-50 backdrop-blur-md bg-black bg-opacity-70">
    <div class="bg-black text-white rounded-lg shadow-lg max-w-md w-full p-6 relative">
        <!-- Close Button -->
        <button
            id="close-popup"
            class="absolute top-4 right-4 text-gray-400 hover:text-white text-xl"
            onclick="closePopup()"
        >
            &times;
        </button>

        <!-- Logo -->
        <div class="text-center mb-6">
            <img src="logo.png" alt="Logo" class="mx-auto w-16 h-16 rounded-full">
        </div>

        <!-- Company Info -->
        <h2 id="popup-company-name" class="text-2xl font-bold text-blue-400 mb-4">Company Name</h2>
        <p id="popup-company-info" class="text-sm text-gray-300 mb-6">Company Info Here</p>

        <!-- Action Buttons -->
        <div id="popup-actions" class="space-y-4">
            <button
                id="add-email-button"
                class="w-full bg-blue-500 text-white py-3 rounded-lg hover:bg-blue-400"
                onclick="addEmail()"
            >
                Add Email
            </button>
            <button
                id="add-phone-button"
                class="w-full bg-blue-500 text-white py-3 rounded-lg hover:bg-blue-400"
                onclick="addPhone()"
            >
                Add Phone
            </button>
        </div>
    </div>
</div>

        

        <!-- Main Content -->
        <div class="main-content flex-1 p-10 space-y-6">
            <!-- Header Section -->
            <header class="text-center py-8">
                <div class="flex flex-col items-center space-y-4">
                    <img src="logo.png" alt="Targo Logo" class="w-16 h-16 rounded-full shadow-lg">
                    <h1 class="text-4xl font-extrabold tracking-tight leading-snug">
                        Lead Generator
                    </h1>
                    <p class="text-gray-400 text-lg font-medium max-w-xl">
                        Få overblik og indsigt i virksomheder nemt og præcist. Find nye vækstmuligheder for din virksomhed.
                    </p>
                </div>
            </header>

            
            
            

            
            
            <section class="max-w-2xl mx-auto bg-gray-900 p-5 rounded-lg shadow-lg border border-gray-800">
                <!-- Search Input -->
                <div class="relative mb-4">
                    <label for="branchekode-search" class="block text-gray-300 mb-2 text-sm font-semibold">
                        Search by Branchekode or Keyword
                    </label>
                    <input 
                        type="text" 
                        id="branchekode-search" 
                        class="w-full px-4 py-2 border border-gray-700 rounded-lg bg-gray-800 text-gray-200 text-sm focus:outline-none focus:ring-2 focus:ring-indigo-500"
                        placeholder="Enter keyword"
                    >
                    <ul id="branchekode-options" 
                        class="absolute z-50 bg-gray-800 text-gray-300 w-full max-h-32 overflow-y-auto rounded-lg shadow-md hidden mt-1 border border-gray-700"></ul>
                </div>
            
                <!-- Filters Section -->
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <!-- Founded Date Filters -->
                    <div>
                        <h3 class="text-gray-300 font-semibold mb-2 text-sm">Founded Date</h3>
                        <div class="grid grid-cols-2 gap-2">
                            <div>
                                <label class="block text-gray-400 text-xs mb-1">From</label>
                                <input type="date" id="founded-from" class="w-full px-3 py-2 border border-gray-700 rounded-lg bg-gray-800 text-gray-200 text-sm focus:ring-2 focus:ring-indigo-500">
                            </div>
                            <div>
                                <label class="block text-gray-400 text-xs mb-1">To</label>
                                <input type="date" id="founded-to" class="w-full px-3 py-2 border border-gray-700 rounded-lg bg-gray-800 text-gray-200 text-sm focus:ring-2 focus:ring-indigo-500">
                            </div>
                        </div>
                        <button 
                            id="clear-dates" 
                            onclick="clearDates()" 
                            class="mt-3 w-full py-2 rounded-lg text-sm font-medium bg-gray-700 text-gray-300 hover:bg-gray-600 focus:outline-none focus:ring-2 focus:ring-gray-500">
                            Clear Dates
                        </button>
                    </div>
            
                    <!-- Postal Code Filters -->
                    <div>
                        <h3 class="text-gray-300 font-semibold mb-2 text-sm">Postal Code</h3>
                        <div class="grid grid-cols-2 gap-2">
                            <div>
                                <label class="block text-gray-400 text-xs mb-1">From</label>
                                <input type="number" id="zip-from" class="w-full px-3 py-2 border border-gray-700 rounded-lg bg-gray-800 text-gray-200 text-sm focus:ring-2 focus:ring-indigo-500" placeholder="2000">
                            </div>
                            <div>
                                <label class="block text-gray-400 text-xs mb-1">To</label>
                                <input type="number" id="zip-to" class="w-full px-3 py-2 border border-gray-700 rounded-lg bg-gray-800 text-gray-200 text-sm focus:ring-2 focus:ring-indigo-500" placeholder="2521">
                            </div>
                        </div>
                        <button 
                            id="clear-zip" 
                            onclick="clearPostalCodes()" 
                            class="mt-3 w-full py-2 rounded-lg text-sm font-medium bg-gray-700 text-gray-300 hover:bg-gray-600 focus:outline-none focus:ring-2 focus:ring-gray-500">
                            Clear Postal Codes
                        </button>
                    </div>
                </div>
            
                <!-- Search Button -->
                <button 
                    id="search-button"
                    onclick="fetchCompanies(page = 1)" 
                    class="w-full py-3 mt-5 rounded-lg font-semibold text-sm bg-indigo-600 text-white shadow-lg hover:bg-indigo-500 hover:scale-105 transition focus:outline-none focus:ring-2 focus:ring-indigo-400">
                    Search
                </button>
            </section>
            

            


            <!-- Results Section -->
            <section id="results" class="mt-6">
                <h2 class="text-xl font-bold mb-4">Companies</h2>
                <div id="company-list" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6"></div>
                <!-- Pagination -->
                <div class="pagination-buttons" id="pagination-buttons">
                    <button id="prev-btn" onclick="fetchCompanies(currentPage - 1)" disabled>Previous</button>
                    <button id="next-btn" onclick="fetchCompanies(currentPage + 1)">Next</button>
                </div>
                <div class="page-indicator" id="page-indicator"></div>
            </section>
        </div>
    </div>

    <script>

function showNotification(message, type = 'success') {
    const container = document.getElementById('notification-container');

    const notification = document.createElement('div');
    notification.classList.add('notification');
    if (type === 'error') {
        notification.style.backgroundColor = '#e53e3e'; // Red for errors
    }

    notification.innerHTML = `
        <img src="logo.png" alt="Logo">
        <span>${message}</span>
        <span class="close-btn">&times;</span>
    `;

    // Close button functionality
    notification.querySelector('.close-btn').onclick = () => {
        notification.remove();
    };

    container.appendChild(notification);

    // Auto-remove after 5 seconds
    setTimeout(() => {
        notification.remove();
    }, 5000);
}



// Function to open the popup and populate with company details
    function openPopup(company) {
    // Populate the popup with company details
    document.getElementById('popup-company-name').textContent = company.name || 'Unknown Company';

    // Create the details list
    const detailsList = `
        <ul class="space-y-2 list-disc list-inside text-blue-400">
            <li><span class="text-gray-300">Address:</span> ${company.address || 'Not Available'}</li>
            <li><span class="text-gray-300">Phone:</span> ${company.phone ? company.phone : 'Not Available'}</li>
            <li><span class="text-gray-300">Email:</span> ${
                company.email
                    ? `<a href="mailto:${company.email}" class="text-blue-400 hover:underline">${company.email}</a>`
                    : 'Not Available'
            }</li>
        </ul>
    `;
    document.getElementById('popup-company-info').innerHTML = detailsList;

    // Show/Hide buttons based on data availability
    const emailButton = document.getElementById('add-email-button');
    const phoneButton = document.getElementById('add-phone-button');

    if (company.email && company.email !== 'Not Available') {
        emailButton.style.display = 'block';
    } else {
        emailButton.style.display = 'none';
    }

    if (company.phone && company.phone !== 'Not Available') {
        phoneButton.style.display = 'block';
    } else {
        phoneButton.style.display = 'none';
    }

    // Show the popup
    document.getElementById('company-popup').classList.remove('hidden');
}



function closePopup() {
    document.getElementById('company-popup').classList.add('hidden');
}

    // Attach click event listeners to company-box elements
    document.addEventListener('DOMContentLoaded', () => {
    // Attach event listener to parent container (event delegation)
    document.body.addEventListener('click', async (event) => {
        const box = event.target.closest('.company-box');
        if (box) {
            const cvr = box.querySelector('p')?.textContent.match(/\d+/)?.[0]; // Extract CVR from "CVR: 12345678"
            if (!cvr) {
                console.error('CVR not found for the selected company.');
                return;
            }

            try {
                // Fetch detailed company data using the API
                const response = await fetch(`/leed-generator/api/company-details/${cvr}`);
                const data = await response.json();

                if (data.success) {
                    const company = data.companyDetails;

                    // Populate the popup with company data
                    openPopup({
                        name: company.name,
                        address: company.address,
                        phone: company.phone,
                        email: company.email,
                    });
                } else {
                    console.error('Error fetching company details:', data.error);
                }
            } catch (error) {
                console.error('Error fetching company details:', error.message);
            }
        }
    });
});

async function addEmail() {
    const email = document
        .getElementById('popup-company-info')
        .textContent.match(/Email: ([^\s]+)/)?.[1];

    const companyName = document.getElementById('popup-company-name').textContent;

    if (!email || !companyName) {
        showNotification('Email or company name not found!', 'error');
        return;
    }

    try {
        const response = await fetch('/leed-generator/api/users/emails', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ email, companyName }),
        });

        const result = await response.json();

        if (response.ok) {
            showNotification(result.message, 'success');
        } else {
            showNotification(result.error, 'error');
        }
    } catch (error) {
        showNotification('Error adding email.', 'error');
        console.error('Error adding email:', error.message);
    }
}




async function addPhone() {
    const phone = document
        .getElementById('popup-company-info')
        .textContent.match(/Phone: ([^\s]+)/)?.[1];

    const companyName = document.getElementById('popup-company-name').textContent;

    if (!phone || !companyName) {
        showNotification('Phone number or company name not found!', 'error');
        return;
    }

    try {
        const response = await fetch('/leed-generator/api/users/phones', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ phone, companyName }),
        });

        const result = await response.json();

        if (response.ok) {
            showNotification(result.message, 'success');
        } else {
            showNotification(result.error, 'error');
        }
    } catch (error) {
        showNotification('Error adding phone number.', 'error');
        console.error('Error adding phone number:', error.message);
    }
}



// Toggle Contacts Dropdown
function clearDates() {
        document.getElementById('founded-from').value = '';
        document.getElementById('founded-to').value = '';
    }

    function clearPostalCodes() {
        document.getElementById('zip-from').value = '';
        document.getElementById('zip-to').value = '';
    }
// Sidebar toggle logic





const searchInput = document.getElementById("branchekode-search");
const optionsList = document.getElementById("branchekode-options");
let brancheData = [];




// Fetch Branchekode data from the API
async function fetchBranchekodeData() {
    try {
        const response = await fetch("/api/branchekoder");
        if (!response.ok) throw new Error("Failed to load Branchekoder data.");

        brancheData = await response.json(); // Load JSON response into `brancheData`
        console.log("Branchekoder data loaded:", brancheData); // Debugging: Check loaded data
    } catch (error) {
        console.error("Error fetching Branchekode data:", error.message);
        alert("Failed to load Branchekode data. Please try again later.");
    }
}

// Function to filter Branchekode options
function filterBranchekode() {
    const query = searchInput.value.toLowerCase().trim();
    optionsList.innerHTML = ""; // Clear current options

    if (query === "") {
        optionsList.classList.add("hidden");
        return;
    }

    const filtered = brancheData.filter(
        (item) =>
            item.name.toLowerCase().includes(query) ||
            item.code.includes(query) ||
            (item.description && item.description.toLowerCase().includes(query))
    );

    if (filtered.length === 0) {
        optionsList.classList.add("hidden");
        return;
    }

    // Populate the filtered results
    filtered.forEach((item) => {
        const li = document.createElement("li");
        li.textContent = `${item.code} - ${item.name}`;
        li.title = item.description; // Add description as tooltip
        li.classList.add(
            "p-2",
            "hover:bg-blue-600",
            "cursor-pointer",
            "rounded"
        );

        li.onclick = () => {
            searchInput.value = `${item.code} - ${item.name}`; // Set the input to selected code
            optionsList.classList.add("hidden"); // Hide the dropdown
        };

        optionsList.appendChild(li);
    });

    optionsList.classList.remove("hidden");
}

// Attach the filtering functionality to the input field
searchInput.addEventListener("input", filterBranchekode);

// Fetch and display companies based on Branchekode and filters
async function fetchCompanies(page = 1) {
    const companyList = document.getElementById('company-list');
    const paginationButtons = document.getElementById('pagination-buttons');
    const pageIndicator = document.getElementById('page-indicator');
    const branchekodeInput = document.getElementById('branchekode-search');
    const foundedFromInput = document.getElementById('founded-from');
    const foundedToInput = document.getElementById('founded-to');
    const zipFromInput = document.getElementById('zip-from');
    const zipToInput = document.getElementById('zip-to');

    const selectedOption = branchekodeInput.value.trim();
    const foundedFrom = foundedFromInput.value;
    const foundedTo = foundedToInput.value;
    const zipFrom = zipFromInput.value;
    const zipTo = zipToInput.value;

    if (!selectedOption) {
        companyList.innerHTML = '<p class="text-red-500">Please select a Branchekode to search.</p>';
        return;
    }

    const [selectedCode] = selectedOption.split(' - '); // Extract Branchekode
    companyList.innerHTML = '<div class="text-center text-gray-400">Loading companies...</div>';
    paginationButtons.style.visibility = 'hidden';

    try {
        // Add filters to query string
        const queryString = new URLSearchParams({
            branchekode: selectedCode,
            page: page,
            founded_from: foundedFrom, // Founded Date Filter
            founded_to: foundedTo,     // Founded Date Filter
            zip_from: zipFrom,         // Postal Code Filter
            zip_to: zipTo,             // Postal Code Filter
        }).toString();

        const response = await fetch(`/leed-generator/api/companies?${queryString}`);
        if (!response.ok) throw new Error('Failed to fetch companies');

        const data = await response.json();
        const tempDiv = document.createElement('div');
        tempDiv.innerHTML = data.data.list.trim();
        const companies = tempDiv.querySelectorAll('li');

        if (companies.length === 0) {
            companyList.innerHTML = '<p class="text-gray-400 text-center">No companies found.</p>';
            return;
        }

        companyList.innerHTML = '';

        companies.forEach(company => {
            const name = company.querySelector('.name a')?.textContent.trim();
            const cvr = company.querySelector('.name div:nth-child(2)')?.textContent.match(/\d+/)?.[0];
            const address = company.querySelector('.name div:nth-child(3)')?.textContent.trim();
            const financials = Array.from(company.querySelectorAll('.name + div div')).map(div => div.textContent.trim());
            const isReklamebeskyttet = company.innerHTML.includes('Reklamebeskyttet'); // Check if 'Reklamebeskyttet' exists

            if (cvr) {
                const financialValues = financials.map(financial => {
                    const match = financial.match(/([-+]?[0-9]*\.?[0-9]+)'?\sDKK/);
                    return match ? parseFloat(match[1].replace(/'/g, '')) : 0;
                });

                companyList.innerHTML += `
    <div class="company-box relative">
        <h3 class="text-lg font-bold">${name}</h3>
        <p class="text-gray-400">CVR: ${cvr}</p>
        <p class="text-gray-400 mb-4">
            <a href="https://www.google.com/maps/search/${address}" target="_blank" class="text-blue-500 underline">Address: ${address}</a>
        </p>
        
        <div class="chart-container">
            <canvas id="chart-${cvr}" style="display: inline-block;"></canvas>
        </div>

        ${
            isReklamebeskyttet
                ? `<div class="warning-icon">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                            <path stroke-linecap="round" stroke-linejoin="round" d="M12 9v2m0 4h.01M21 16.95a2.7 2.7 0 01-2.7 2.7H5.7a2.7 2.7 0 01-2.7-2.7V7.05a2.7 2.7 0 012.7-2.7h12.6a2.7 2.7 0 012.7-2.7v9.9z"/>
                        </svg>
                        <div class="custom-tooltip">
                            Virksomheden er reklamebeskyttet<br>og må derfor ikke kontaktes
                        </div>
                   </div>`
                : ''
        }
    </div>
`;


                setTimeout(() => {
                    const ctx = document.getElementById(`chart-${cvr}`).getContext('2d');
                    new Chart(ctx, {
                        type: 'line',
                        data: {
                            labels: ['Egenkapital', 'Bruttofortjeneste', 'Resultat før skat'],
                            datasets: [{
                                label: `${name} Financials`,
                                data: financialValues,
                                borderColor: '#3b82f6',
                                backgroundColor: 'rgba(59, 130, 246, 0.1)',
                                tension: 0.3
                            }]
                        },
                        options: {
                            responsive: true,
                            plugins: {
                                tooltip: {
                                    mode: 'index',
                                    intersect: false
                                },
                                title: {
                                    display: true,
                                    text: 'Company Financials'
                                }
                            },
                            scales: {
                                x: {
                                    title: {
                                        display: true,
                                        text: 'Metrics'
                                    }
                                },
                                y: {
                                    title: {
                                        display: true,
                                        text: 'Value (DKK)'
                                    },
                                    ticks: {
                                        callback: function(value) {
                                            return value.toLocaleString('da-DK');
                                        }
                                    }
                                }
                            }
                        }
                    });
                }, 100);
            }
        });

        currentPage = page;
        totalPages = Math.ceil(data.data.count / 10);

        document.getElementById('prev-btn').disabled = currentPage === 1;
        document.getElementById('next-btn').disabled = currentPage === totalPages;
        paginationButtons.style.visibility = 'visible';
        pageIndicator.textContent = `Page ${currentPage} of ${totalPages}`;
    } catch (error) {
        companyList.innerHTML = '<p class="text-red-500">Failed to load companies. Please try again later.</p>';
    }
}




window.onload = fetchBranchekodeData;


    </script>
</body>
</html>
