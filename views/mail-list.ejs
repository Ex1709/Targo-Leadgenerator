<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Targo Mail List</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/xlsx/dist/xlsx.full.min.js"></script>
    <link href='https://unpkg.com/boxicons/css/boxicons.min.css' rel='stylesheet'>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jsPDF/2.4.0/jspdf.umd.min.js"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Roboto:wght@500;700&display=swap');

        body {
            background-color: #121212;
            color: #e0e0e0;
            font-family: 'Roboto', sans-serif;
        }

        .sidebar {
            background-color: #1e1e1e;
            width: 70px;
            height: 100vh;
            position: fixed;
            left: 0;
            transition: width 0.3s ease;
            overflow: hidden;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .sidebar:hover {
            width: 250px;
        }

        .sidebar .logo {
            text-align: center;
            padding: 20px 0;
        }

        .sidebar .logo img {
            width: 70px;
            height: 70px;
            margin: 0 auto;
            display: block;
        }

        .sidebar nav {
            margin-top: 20px;
            width: 100%;
        }

        .sidebar nav a {
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 15px 0;
            color: #e0e0e0;
            text-decoration: none;
            font-size: 16px;
            font-weight: 500;
            transition: background-color 0.3s ease, box-shadow 0.3s ease;
            width: 100%;
        }

        .sidebar nav a:hover {
            background-color: rgba(255, 255, 255, 0.1);
            box-shadow: inset 0 0 10px rgba(255, 255, 255, 0.2);
        }

        .sidebar:hover nav a {
            justify-content: flex-start;
            padding-left: 20px;
        }

        .sidebar nav a i {
            font-size: 24px;
            margin: 0;
            transition: margin 0.3s ease;
        }

        .sidebar:hover nav a i {
            margin-right: 10px;
        }

        .sidebar nav a span {
            display: none;
        }

        .sidebar:hover nav a span {
            display: inline;
        }

        .main-content {
            margin-left: 70px;
            transition: margin-left 0.3s ease;
        }

        .sidebar:hover ~ .main-content {
            margin-left: 250px;
        }

        .banner {
            font-weight: 700;
            background-color: #1e1e1e;
            border: 1px solid rgba(255, 255, 255, 0.1);
        }

        .card {
            background-color: #1e1e1e;
            border: 1px solid rgba(255, 255, 255, 0.1);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 20px rgba(255, 255, 255, 0.3);
        }

        .card h3 {
            font-weight: 700;
        }

        .card p {
            font-weight: 500;
        }

        .card button {
            font-weight: 700;
            background-color: #3b82f6;
            box-shadow: 0 4px 10px rgba(255, 255, 255, 0.2);
            transition: box-shadow 0.3s ease;
        }

        .card button:hover {
            box-shadow: 0 6px 15px rgba(255, 255, 255, 0.3);
        }

        .filter-bar button {
            background-color: #3b82f6;
            color: white;
            transition: background-color 0.3s ease, box-shadow 0.3s ease;
        }

        .filter-bar button:hover {
            background-color: #2563eb;
            box-shadow: 0 4px 10px rgba(255, 255, 255, 0.2);
        }
        

        #notification-container {
    position: fixed;
    bottom: 20px;
    left: 50%;
    transform: translateX(-50%);
    z-index: 9999; /* Ensure it appears above the blurred popup */
    display: flex;
    flex-direction: column;
    gap: 10px;
    align-items: center;
    pointer-events: none; /* Allow clicks through the notifications */
}

/* Notification styles */
.notification {
    display: flex;
    align-items: center;
    gap: 12px;
    background-color: #1e293b;
    color: white;
    padding: 10px 16px;
    border-radius: 8px;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
    animation: fadeIn 0.5s ease, fadeOut 0.5s ease 4.5s;
    font-family: 'Inter', sans-serif;
    pointer-events: auto; /* Enable interactions for close button */
    max-width: 90%; /* Limit width for smaller screens */
}

/* Notification image */
.notification img {
    width: 32px;
    height: 32px;
    border-radius: 50%;
}

/* Close button */
.notification .close-btn {
    margin-left: auto;
    cursor: pointer;
    color: #e0e0e0;
    font-size: 1.2rem;
    transition: color 0.3s ease;
}

.notification .close-btn:hover {
    color: #ff4d4f;
}

/* Fade-in and fade-out animations */
@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translateY(10px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes fadeOut {
    from {
        opacity: 1;
    }
    to {
        opacity: 0;
    }
}

    </style>
</head>
<body class="text-white">
    <div class="flex">
        <!-- Sidebar -->
        <div id="notification-container" class="fixed bottom-4 right-4 space-y-4"></div>

        <div class="sidebar">
            <div class="logo">
                <img src="logo.png" alt="Targo Logo">
            </div>
            <nav>
                <a href="/dashboard">
                    <i class='bx bx-home'></i>
                    <span>Dashboard</span>
                </a>
                <a href="/leed-generator">
                    <i class='bx bx-compass'></i>
                    <span>Lead Generator</span>
                </a>
                <a href="/mail-list">
                    <i class='bx bx-envelope'></i>
                    <span>Mail List</span>
                </a>
                <a href="/phone-list">
                    <i class='bx bx-phone-call'></i>
                    <span>Phone List</span>
                </a>
                <a href="#">
                    <i class='bx bxl-mailchimp' ></i>                    
                    <span>MailChimp</span>
                </a>
                <a href="#">
                    <i class='bx bxs-cog' ></i>
                    <span>Settings</span>
                </a>
            </nav>
        </div>

        <!-- Main Content -->
        <div class="main-content flex-1 p-10">
            <!-- Filter Bar -->

            <!-- Banner -->


<div class="p-6 banner rounded-lg mb-8">
    <!-- Banner Header -->
    <div class="mb-6">
        <h3 class="text-xl font-bold text-white">Mail Liste</h3>
        <p class="text-gray-400">
            Administrer, eksporter og send emails nemt og effektivt. Organisér dine kontakter og hold styr på din kommunikation.
        </p>
        
    </div>

    <!-- Export Buttons -->
    <div class="flex justify-end gap-6 mb-4">
        <button class="bg-green-500 hover:bg-green-400 text-white font-medium py-2 px-4 rounded-lg flex items-center shadow-md" onclick="exportToExcel()">
            <i class="fa-solid fa-file-excel mr-2"></i> Excel
        </button>
        <button class="bg-yellow-500 hover:bg-yellow-400 text-white font-medium py-2 px-4 rounded-lg flex items-center shadow-md" onclick="exportToCSV()">
            <i class="fa-solid fa-file-csv mr-2"></i> CSV
        </button>
        <button class="bg-red-500 hover:bg-red-400 text-white font-medium py-2 px-4 rounded-lg flex items-center shadow-md" onclick="exportToPDF()">
            <i class="fa-solid fa-file-pdf mr-2"></i> PDF
        </button>
    </div>

    <!-- Email Table -->
    <div class="overflow-x-auto">
        <table class="table-auto w-full bg-gray-700 rounded-lg overflow-hidden">
            <thead>
                <tr class="bg-gray-600 text-gray-300">
                    <th class="py-3 px-4 text-left text-gray-100">Firma</th>
                    <th class="py-3 px-4 text-left text-gray-100">Email</th>
                    <th class="py-3 px-4 text-left text-gray-100"></th>
                </tr>
            </thead>
            <tbody id="email-list">
                <!-- Example Row -->


            </tbody>
        </table>
    </div>
</div>






            </div>
        </div>
    </div>

    <script>

function showNotification(message, type = 'success') {
    const container = document.getElementById('notification-container');

    const notification = document.createElement('div');
    notification.classList.add('notification');
    if (type === 'error') {
        notification.style.backgroundColor = '#e53e3e'; // Red for errors
    }

    notification.innerHTML = `
        <img src="logo.png" alt="Logo">
        <span>${message}</span>
        <span class="close-btn">&times;</span>
    `;

    // Close button functionality
    notification.querySelector('.close-btn').onclick = () => {
        notification.remove();
    };

    container.appendChild(notification);

    // Auto-remove after 5 seconds
    setTimeout(() => {
        notification.remove();
    }, 5000);
}




        const emailListTable = document.getElementById('email-list');

        // Fetch emails and display them
        async function fetchEmails() {
    try {
        const response = await fetch('/leed-generator/api/users/emails');
        const emails = await response.json();

        emailListTable.innerHTML = ''; // Clear existing rows

        emails.forEach(emailEntry => {
            const [companyName, email] = emailEntry.split(' | ');
            const row = document.createElement('tr');
row.innerHTML = `
    <td class="px-4 py-2 text-gray-300">${companyName}</td>
    <td class="px-4 py-2 text-gray-300">${email}</td>
    <td class="px-4 py-2">
        <div class="flex gap-3 justify-center">
            <!-- Send Button -->
            <button 
                class="bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-400 hover:to-blue-500 text-white font-semibold py-2 px-4 rounded-lg flex items-center shadow-lg transition-all duration-300 transform hover:scale-105"
                onclick="sendMail('${email}')"
            >
                <i class="fa-solid fa-paper-plane mr-2"></i> Send
            </button>

            <!-- Delete Button -->
            <button 
                class="bg-gradient-to-r from-red-500 to-red-600 hover:from-red-400 hover:to-red-500 text-white font-semibold py-2 px-4 rounded-lg flex items-center shadow-lg transition-all duration-300 transform hover:scale-105"
                onclick="deleteEmail('${email}')"
            >
                <i class="fa-solid fa-trash mr-2"></i> Delete
            </button>
        </div>
    </td>
`;

            emailListTable.appendChild(row);
        });
    } catch (error) {
        console.error('Error fetching emails:', error);
    }
}


        // Delete an email
        async function deleteEmail(email) {
    try {
        const response = await fetch('/leed-generator/api/users/emails', {
            method: 'DELETE',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ email })
        });

        const result = await response.json();

        if (response.ok) {
            showNotification('E-mail blev slettet!', 'success');
            fetchEmails(); // Refresh the email list
        } else {
            showNotification(result.error || 'Kunne ikke slette e-mail', 'error');
        }
    } catch (error) {
        console.error('Error deleting email:', error);
        showNotification('Der opstod en fejl.', 'error');
    }
}


        // Send mail using default mail client
        function sendMail(email) {
            window.location.href = `mailto:${email}`;
        }

        // Export to Excel
        function exportToExcel() {
    try {
        const table = document.querySelector('table');
        const wb = XLSX.utils.table_to_book(table, { sheet: "Mail List" });
        XLSX.writeFile(wb, 'Targo Mail Export.xlsx');
        showNotification('Maillisten blev eksporteret til Excel!', 'success');
    } catch (error) {
        console.error('Error exporting to Excel:', error);
        showNotification('Der opstod en fejl.', 'error');
    }
}


        // Export to CSV
        function exportToCSV() {
    try {
        const rows = Array.from(document.querySelectorAll('table tr')).map(row =>
            Array.from(row.cells).map(cell => cell.textContent)
        );
        const csvContent = rows.map(row => row.join(',')).join('\n');
        const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });
        const url = URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.href = url;
        a.download = 'Mail_List.csv';
        a.click();
        URL.revokeObjectURL(url);
        showNotification('Maillisten blev eksporteret til CSV!', 'success');
    } catch (error) {
        console.error('Error exporting to CSV:', error);
        showNotification('Der opstod en fejl.', 'error');
    }
}

        // Export to PDF
        function exportToPDF() {
    try {
        const { jsPDF } = window.jspdf;
        const pdf = new jsPDF();
        pdf.autoTable({ html: 'table' });
        pdf.save('Mail_List.pdf');
        showNotification('Maillisten blev eksporteret til PDF!', 'success');
    } catch (error) {
        console.error('Error exporting to PDF:', error);
        showNotification('Der opstod en fejl.', 'error');
    }
}


        // Initial Fetch
        fetchEmails();
    </script>
</body>
</html>
